// Mocks generated by Mockito 5.1.0 from annotations
// in podedex/test/unit_tests/bloc/pokemons_list_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:podedex/domain/data_sources/pokemon_repository.dart' as _i2;
import 'package:podedex/domain/entities/pokemon.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [PokemonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepository extends _i1.Mock implements _i2.PokemonRepository {
  MockPokemonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> getPokemonsCount({bool? favoritesOnly = false}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getPokemonsCount, [], {#favoritesOnly: favoritesOnly}),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
  @override
  _i3.Future<List<_i4.Pokemon>> getPokemons(
          {int? pageNumber = 0,
          int? pageLength = 30,
          bool? favoritesOnly = false}) =>
      (super.noSuchMethod(
              Invocation.method(#getPokemons, [], {
                #pageNumber: pageNumber,
                #pageLength: pageLength,
                #favoritesOnly: favoritesOnly
              }),
              returnValue: Future<List<_i4.Pokemon>>.value(<_i4.Pokemon>[]))
          as _i3.Future<List<_i4.Pokemon>>);
}
